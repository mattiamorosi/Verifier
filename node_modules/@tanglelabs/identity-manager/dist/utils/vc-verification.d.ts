import { Credential, ResolvedDocument } from "@iota/identity-wasm/node";
/**
 * Validate a credential
 *
 * @param {Credential} signedVc - signed VC that needs to be validated
 * @param {ResolvedDocument} issuerIdentity - account it was signed with
 * @returns {Promise<boolean>}
 */
export declare function isCredentialValid(signedVc: Credential, issuerIdentity: ResolvedDocument): Promise<boolean>;
/**
 * DVID v0.2.0
 * Domain Verifiable Identity is a module that allows you to verify the source of
 * origin for a verifiable credential, here are the steps to validate with DVID v0.2.0
 *
 * - Parse the Document and look for the domain of origin
 * - Lookup TXT records for the domain of origin
 * - Resolve DID contained in DNS record and validate the credential
 *
 * @param {Credential} signedVc
 * @returns {{ vc: boolean, dvid: boolean}}
 */
export declare function verifyCredential(signedVc: Credential): Promise<{
    vc: boolean;
    dvid: boolean;
}>;
